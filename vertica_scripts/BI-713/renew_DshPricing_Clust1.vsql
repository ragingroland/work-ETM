create local temp table tmp_local
on commit preserve rows as
select
    pcr.DataInfo,
    dayofweek(pcr.DataInfo) as DataInfo_dayofweek,
    pcr.DataInfo as DataInfo_startingdayofweek,
    pcr.DataInfo as DataInfo_monthstart,
    coalesce(pcr.region_id, por.region_id) as region_id,
    coalesce(pcr.NetNum, por.NetNum) as NetNum,
    pcs.Class33_Code_2 as Class3_Code_2,
    dr.MnfCode,
    coalesce(pcr.company_name, por.company_name) as company_name,
    pcs.status as comp_status,
    0 as outlier,
    isnull(t10.MnfCode, '0') as isTOP10,
    isnull(t20.MnfCode, '0') as isTOP20,
    0 as Clust_Code,
    0 as SubClust_Code,
    0 as Clust_merch_count
from DataPrime.Price_common_report pcr
left join DataPrime.Price_outliers_report por on pcr.DataInfo = por.DataInfo
    and pcr.region_id = por.region_id
    and pcr.NetNum = por.NetNum
left join DataPrime.price_comp_status pcs on pcr.company_name = pcs.company_name
    and pcr.NetNum = pcs.NetNum
    and pcr.comp_status = pcs.status
left join public.DescRgd dr on pcs.Class33_Code_2 = left(dr.Class3_Code, 2)
    and pcr.RgdCode = dr.RgdCode
left join DataMart.DshPricing_MnfCodeTop10 t10 on dr.MnfCode = t10.MnfCode
left join DataMart.DshPricing_MnfCodeTop20 t20 on dr.MnfCode = t20.MnfCode
where pcr.DataInfo >= add_months(trunc(current_date - 1, 'MM') - 12)
group by 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16;



-- delete from DshPricing_Clust1
-- where DataInfo < add_months(trunc(current_date - 1, 'MM') - 12);
-- commit;

-- merge into DataPrime.DWHCatalog as target -- тут мерджатся факты и справочники
-- using (
--     select distinct
--         projection_schema as table_schema,
--         anchor_table_name as table_name,
--         projection_schema || '.' || anchor_table_name as objname,
--         case
--             when segment_expression like 'hash%'
--                 then 'fact'
--             when segment_expression is null
--                 then 'refr'
--         end as tag
--     from v_catalog.projections) as temp
-- on temp.objname = target.objname
-- when matched then update set
--     table_schema = temp.table_schema,
--     table_name = temp.table_name,
--     objname = temp.objname,
--     tag = temp.tag
-- when not matched then insert values (
--     temp.table_schema,
--     temp.table_name,
--     temp.objname,
--     temp.tag);



create local temp table tmp_local
on commit preserve rows as
select
    pcr.DataInfo,
    dayofweek(pcr.DataInfo) as DataInfo_dayofweek,
    date_trunc('week', pcr.DataInfo)::date AS DataInfo_start_of_week,
    date_trunc('month', pcr.DataInfo)::date AS DataInfo_months_start,
    coalesce(pcr.region_id, por.region_id) as region_id,
    -- '' as region_id_,
    --case
    --	  when pcr.region_id != null
    -- 	  	then region_id_ = pcr.region_id and outlier_ = 0
    --	  else region_id_ = por.region_id and outlier_ = 1
    --end,
    coalesce(pcr.NetNum, por.NetNum) as NetNum,
    pcs.Class33_Code_2 as Class3_Code_2,
    coalesce(dr.MnfCode, 0) as MnfCode,
    coalesce(pcr.company_name, por.company_name) as company_name,
    pcs.status as comp_status,
    coalesce(por.Price81, '0') as outlier,
    isnull(t10.MnfCode, '0') as isTOP10,
    isnull(t20.MnfCode, '0') as isTOP20,
    0 as Clust_Code,
    0 as SubClust_Code,
    0 as Clust_merch_count
from DataPrime.Price_common_report pcr
left join DataPrime.Price_outliers_report por on pcr.DataInfo = por.DataInfo
    and pcr.region_id = por.region_id
    and pcr.NetNum = por.NetNum
    and pcr.RgdCode = por.RgdCode
left join DataPrime.price_comp_status pcs on pcr.company_name = pcs.company_name
    and pcr.NetNum = pcs.NetNum
    and pcr.comp_status = pcs.status
left join public.DescRgd dr on pcs.Class33_Code_2 = left(dr.Class3_Code, 2)
    and pcr.RgdCode = dr.RgdCode
left join DataMart.DshPricing_MnfCodeTop10 t10 on dr.MnfCode = t10.MnfCode
left join DataMart.DshPricing_MnfCodeTop20 t20 on dr.MnfCode = t20.MnfCode
where pcr.DataInfo >= add_months(trunc(current_date - 1, 'MM'), - 12)
group by 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16;

select * from tmp_local;
select distinct istop10 from tmp_local;
select distinct istop20 from tmp_local;
